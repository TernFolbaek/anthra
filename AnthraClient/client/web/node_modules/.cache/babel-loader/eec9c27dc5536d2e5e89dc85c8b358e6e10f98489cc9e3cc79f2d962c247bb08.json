{"ast":null,"code":"var _jsxFileName = \"/Users/tyf/Documents/software-programming/personal-coding-projects/Anthra/AnthraClient/client/web/src/Dashboard/Components/MessageList/MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './MessageList.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageList = () => {\n  _s();\n  const [yourTurnConversations, setYourTurnConversations] = useState([]);\n  const [theirTurnConversations, setTheirTurnConversations] = useState([]);\n  const [isYourTurnOpen, setIsYourTurnOpen] = useState(true);\n  const [isTheirTurnOpen, setIsTheirTurnOpen] = useState(true);\n  const navigate = useNavigate();\n  const currentUserId = localStorage.getItem('userId');\n  useEffect(() => {\n    if (!currentUserId) {\n      console.error('User ID not found in localStorage.');\n      return;\n    }\n    fetch(`http://localhost:5001/api/Messages/GetConversations?userId=${currentUserId}`).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          console.error('Error fetching conversations:', text);\n          throw new Error(`HTTP error! status: ${response.status}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      // Categorize conversations\n      const yourTurn = data.filter(conv => conv.lastMessageSenderId !== currentUserId);\n      const theirTurn = data.filter(conv => conv.lastMessageSenderId === currentUserId);\n      setYourTurnConversations(yourTurn);\n      setTheirTurnConversations(theirTurn);\n    }).catch(error => console.error('Error fetching conversations:', error));\n  }, [currentUserId]);\n  const handleConversationClick = userId => {\n    navigate(`/messages/${userId}`);\n  };\n  const renderConversation = conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-row\",\n    onClick: () => handleConversationClick(conversation.userId),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: conversation.userProfilePicture ? `http://localhost:5001${conversation.userProfilePicture}` : '/default-profile.png',\n      alt: \"Profile\",\n      className: \"conversation-avatar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: conversation.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"last-message\",\n        children: conversation.lastMessageContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-timestamp\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: conversation.lastMessageTimestamp ? new Date(conversation.lastMessageTimestamp).toLocaleDateString() : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, conversation.userId, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        onClick: () => setIsYourTurnOpen(!isYourTurnOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your turn (\", yourTurnConversations.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dropdown-arrow\",\n          children: isYourTurnOpen ? '▲' : '▼'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), isYourTurnOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list\",\n        children: yourTurnConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex justify-center border-none p-5\",\n          children: \"No conversations found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this) : yourTurnConversations.map(renderConversation)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-header\",\n        onClick: () => setIsTheirTurnOpen(!isTheirTurnOpen),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Their turn (\", theirTurnConversations.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dropdown-arrow\",\n          children: isTheirTurnOpen ? '▲' : '▼'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), isTheirTurnOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-list\",\n        children: theirTurnConversations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No conversations found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this) : theirTurnConversations.map(renderConversation)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(MessageList, \"/W9s7t/9ikknfTO6Wx9XR2UN7as=\", false, function () {\n  return [useNavigate];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","MessageList","_s","yourTurnConversations","setYourTurnConversations","theirTurnConversations","setTheirTurnConversations","isYourTurnOpen","setIsYourTurnOpen","isTheirTurnOpen","setIsTheirTurnOpen","navigate","currentUserId","localStorage","getItem","console","error","fetch","then","response","ok","text","Error","status","json","data","yourTurn","filter","conv","lastMessageSenderId","theirTurn","catch","handleConversationClick","userId","renderConversation","conversation","className","onClick","children","src","userProfilePicture","alt","fileName","_jsxFileName","lineNumber","columnNumber","userName","lastMessageContent","lastMessageTimestamp","Date","toLocaleDateString","length","map","_c","$RefreshReg$"],"sources":["/Users/tyf/Documents/software-programming/personal-coding-projects/Anthra/AnthraClient/client/web/src/Dashboard/Components/MessageList/MessageList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './MessageList.css';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Conversation {\n    userId: string;\n    userName: string;\n    userEmail: string;\n    userProfilePicture?: string;\n    lastMessageContent: string;\n    lastMessageTimestamp: string;\n    lastMessageSenderId: string; // Added field\n}\n\nconst MessageList: React.FC = () => {\n    const [yourTurnConversations, setYourTurnConversations] = useState<Conversation[]>([]);\n    const [theirTurnConversations, setTheirTurnConversations] = useState<Conversation[]>([]);\n    const [isYourTurnOpen, setIsYourTurnOpen] = useState(true);\n    const [isTheirTurnOpen, setIsTheirTurnOpen] = useState(true);\n    const navigate = useNavigate();\n    const currentUserId = localStorage.getItem('userId');\n\n    useEffect(() => {\n        if (!currentUserId) {\n            console.error('User ID not found in localStorage.');\n            return;\n        }\n\n        fetch(`http://localhost:5001/api/Messages/GetConversations?userId=${currentUserId}`)\n            .then((response) => {\n                if (!response.ok) {\n                    return response.text().then((text) => {\n                        console.error('Error fetching conversations:', text);\n                        throw new Error(`HTTP error! status: ${response.status}`);\n                    });\n                }\n                return response.json();\n            })\n            .then((data) => {\n                // Categorize conversations\n                const yourTurn = data.filter((conv: Conversation) => conv.lastMessageSenderId !== currentUserId);\n                const theirTurn = data.filter((conv: Conversation) => conv.lastMessageSenderId === currentUserId);\n\n                setYourTurnConversations(yourTurn);\n                setTheirTurnConversations(theirTurn);\n            })\n            .catch((error) => console.error('Error fetching conversations:', error));\n    }, [currentUserId]);\n\n    const handleConversationClick = (userId: string) => {\n        navigate(`/messages/${userId}`);\n    };\n\n    const renderConversation = (conversation: Conversation) => (\n        <div\n            key={conversation.userId}\n            className=\"conversation-row\"\n            onClick={() => handleConversationClick(conversation.userId)}\n        >\n            <img\n                src={\n                    conversation.userProfilePicture\n                        ? `http://localhost:5001${conversation.userProfilePicture}`\n                        : '/default-profile.png'\n                }\n                alt=\"Profile\"\n                className=\"conversation-avatar\"\n            />\n            <div className=\"conversation-info\">\n                <h3>{conversation.userName}</h3>\n                <p className=\"last-message\">{conversation.lastMessageContent}</p>\n            </div>\n            <div className=\"conversation-timestamp\">\n                <span>\n                    {conversation.lastMessageTimestamp\n                        ? new Date(conversation.lastMessageTimestamp).toLocaleDateString()\n                        : ''}\n                </span>\n            </div>\n        </div>\n    );\n\n    return (\n        <div className=\"message-list\">\n            <div className=\"dropdown-section\">\n                <div className=\"dropdown-header\" onClick={() => setIsYourTurnOpen(!isYourTurnOpen)}>\n                    <h3>Your turn ({yourTurnConversations.length})</h3>\n                    <span className=\"dropdown-arrow\">{isYourTurnOpen ? '▲' : '▼'}</span>\n                </div>\n                {isYourTurnOpen && (\n                    <div className=\"conversation-list\">\n                        {yourTurnConversations.length === 0 ? (\n                            <p className=\"flex justify-center border-none p-5\">No conversations found.</p>\n                        ) : (\n                            yourTurnConversations.map(renderConversation)\n                        )}\n                    </div>\n                )}\n            </div>\n            <div className=\"dropdown-section\">\n                <div className=\"dropdown-header\" onClick={() => setIsTheirTurnOpen(!isTheirTurnOpen)}>\n                    <h3>Their turn ({theirTurnConversations.length})</h3>\n                    <span className=\"dropdown-arrow\">{isTheirTurnOpen ? '▲' : '▼'}</span>\n                </div>\n                {isTheirTurnOpen && (\n                    <div className=\"conversation-list\">\n                        {theirTurnConversations.length === 0 ? (\n                            <p>No conversations found.</p>\n                        ) : (\n                            theirTurnConversations.map(renderConversation)\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MessageList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}