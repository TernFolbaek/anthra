{"ast":null,"code":"var _jsxFileName = \"/Users/tyf/Documents/software-programming/personal-coding-projects/Anthra/AnthraClient/client/web/src/Authentication/AuthPage.tsx\",\n  _s = $RefreshSig$();\nimport './AuthPage.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = ({\n  onBackClick,\n  onAuthSuccess\n}) => {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(true);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const switchAuthMode = () => {\n    setIsSignUp(!isSignUp);\n    setUsername('');\n    setEmail('');\n    setPassword('');\n    setMessage(null);\n    setError(null);\n  };\n  const handleGoogleSuccess = async credentialResponse => {\n    if (credentialResponse.credential) {\n      const tokenId = credentialResponse.credential;\n      try {\n        // Send the tokenId to your backend for verification\n        const backendResponse = await axios.post('http://localhost:5001/api/Auth/GoogleLogin', {\n          tokenId\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const {\n          token,\n          userId\n        } = backendResponse.data;\n\n        // Store token and userId\n        localStorage.setItem('token', token);\n        localStorage.setItem('userId', userId);\n\n        // Fetch user profile\n        const profileResponse = await axios.get('http://localhost:5001/api/Profile/GetProfile', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        const userProfile = profileResponse.data;\n        onAuthSuccess(userProfile.createdProfile);\n      } catch (error) {\n        setError('Google login failed.');\n      }\n    } else {\n      setError('Google login failed.');\n    }\n  };\n  const handleGoogleFailure = () => {\n    setError('Google login failed.');\n  };\n  const goBack = () => {\n    onBackClick();\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const endpoint = isSignUp ? 'http://localhost:5001/api/Auth/Register' : 'http://localhost:5001/api/Auth/Login';\n    const payload = isSignUp ? {\n      username,\n      email,\n      password\n    } : {\n      username,\n      password\n    };\n    try {\n      const response = await axios.post(endpoint, payload);\n      const {\n        userId,\n        token\n      } = response.data;\n\n      // Store token and userId\n      localStorage.setItem('token', token);\n      localStorage.setItem('userId', userId);\n\n      // Fetch the user's profile\n      const profileResponse = await axios.get('http://localhost:5001/api/Profile/GetProfile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const userProfile = profileResponse.data;\n\n      // Notify App.tsx of authentication success\n      onAuthSuccess(userProfile.createdProfile);\n    } catch (err) {\n      if (err.response && err.response.data) {\n        const errorData = err.response.data;\n        setError(errorData.Message || Object.values(errorData.errors || {}).join(' ') || 'An error occurred');\n      } else {\n        setError('An error occurred. Please try again.');\n      }\n      setMessage(null);\n    }\n  };\n\n  // @ts-ignore\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: goBack,\n      children: \"Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignUp ? 'Sign Up' : 'Log In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          required: true,\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          required: true,\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-button\",\n          children: isSignUp ? 'Sign Up' : 'Log In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-login\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          onSuccess: handleGoogleSuccess,\n          onError: handleGoogleFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isSignUp ? 'Already have an account?' : \"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"switch-button\",\n          onClick: switchAuthMode,\n          children: isSignUp ? 'Log In' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"a57XH+V0KqES7IuMWiZ6aECOKL8=\");\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","axios","GoogleLogin","jsxDEV","_jsxDEV","AuthPage","onBackClick","onAuthSuccess","_s","isSignUp","setIsSignUp","username","setUsername","email","setEmail","password","setPassword","message","setMessage","error","setError","switchAuthMode","handleGoogleSuccess","credentialResponse","credential","tokenId","backendResponse","post","headers","token","userId","data","localStorage","setItem","profileResponse","get","userProfile","createdProfile","handleGoogleFailure","goBack","handleSubmit","e","preventDefault","endpoint","payload","response","err","errorData","Message","Object","values","errors","join","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","value","onChange","target","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/tyf/Documents/software-programming/personal-coding-projects/Anthra/AnthraClient/client/web/src/Authentication/AuthPage.tsx"],"sourcesContent":["import './AuthPage.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { GoogleLogin, CredentialResponse } from '@react-oauth/google';\n\ninterface AuthPageProps {\n    onBackClick: () => void;\n    onAuthSuccess: (profileCreated: boolean) => void;\n}\n\nconst AuthPage: React.FC<AuthPageProps> = ({ onBackClick, onAuthSuccess }) => {\n    const [isSignUp, setIsSignUp] = useState(true);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [message, setMessage] = useState<string | null>(null);\n    const [error, setError] = useState<string | null>(null);\n\n    const switchAuthMode = () => {\n        setIsSignUp(!isSignUp);\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setMessage(null);\n        setError(null);\n    };\n\n    const handleGoogleSuccess = async (credentialResponse: CredentialResponse) => {\n\n        if (credentialResponse.credential) {\n            const tokenId = credentialResponse.credential;\n\n            try {\n                // Send the tokenId to your backend for verification\n                const backendResponse = await axios.post(\n                    'http://localhost:5001/api/Auth/GoogleLogin',\n                    { tokenId },\n                    {\n                        headers: {\n                            'Content-Type': 'application/json',\n                        }\n                    }\n                );\n                const { token, userId } = backendResponse.data;\n\n                // Store token and userId\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n\n                // Fetch user profile\n                const profileResponse = await axios.get(\n                    'http://localhost:5001/api/Profile/GetProfile',\n                    { headers: {\n                            'Authorization': `Bearer ${token}`,\n                        }\n                    }\n                );\n                const userProfile = profileResponse.data;\n\n                onAuthSuccess(userProfile.createdProfile);\n            } catch (error) {\n                setError('Google login failed.');\n            }\n        } else {\n            setError('Google login failed.');\n        }\n    };\n\n    const handleGoogleFailure = () => {\n        setError('Google login failed.');\n    };\n\n    const goBack = () => {\n        onBackClick();\n    };\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        const endpoint = isSignUp\n            ? 'http://localhost:5001/api/Auth/Register'\n            : 'http://localhost:5001/api/Auth/Login';\n\n        const payload = isSignUp\n            ? { username, email, password }\n            : { username, password };\n\n        try {\n            const response = await axios.post(endpoint, payload);\n\n            const { userId, token } = response.data;\n\n            // Store token and userId\n            localStorage.setItem('token', token);\n            localStorage.setItem('userId', userId);\n\n            // Fetch the user's profile\n            const profileResponse = await axios.get(\n                'http://localhost:5001/api/Profile/GetProfile',\n            { headers: {\n                'Authorization': `Bearer ${token}`\n            }}\n            );\n            const userProfile = profileResponse.data;\n\n            // Notify App.tsx of authentication success\n            onAuthSuccess(userProfile.createdProfile);\n        } catch (err: any) {\n            if (err.response && err.response.data) {\n                const errorData = err.response.data;\n                setError(\n                    errorData.Message ||\n                    Object.values(errorData.errors || {}).join(' ') ||\n                    'An error occurred'\n                );\n            } else {\n                setError('An error occurred. Please try again.');\n            }\n            setMessage(null);\n        }\n    };\n\n    // @ts-ignore\n    return (\n        <div className=\"auth-page\">\n            <button className=\"back-button\" onClick={goBack}>\n                Back\n            </button>\n            <div className=\"auth-container\">\n                <h2>{isSignUp ? 'Sign Up' : 'Log In'}</h2>\n\n                {message && <p className=\"success-message\">{message}</p>}\n                {error && <p className=\"error-message\">{error}</p>}\n\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        required\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    {isSignUp && (\n                        <input\n                            type=\"email\"\n                            placeholder=\"Email\"\n                            required\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                    )}\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        required\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <button type=\"submit\" className=\"submit-button\">\n                        {isSignUp ? 'Sign Up' : 'Log In'}\n                    </button>\n                </form>\n                <div className=\"social-login\">\n                    <GoogleLogin\n                        onSuccess={handleGoogleSuccess}\n                        onError={handleGoogleFailure}\n                    />\n                </div>\n\n                <p>\n                    {isSignUp ? 'Already have an account?' : \"Don't have an account?\"}{' '}\n                    <button className=\"switch-button\" onClick={switchAuthMode}>\n                        {isSignUp ? 'Log In' : 'Sign Up'}\n                    </button>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}